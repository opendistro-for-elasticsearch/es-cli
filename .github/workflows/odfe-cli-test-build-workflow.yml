name: Build and Test odfe-cli
on:
  push:
    branches:
      - main
      - opendistro-*
  pull_request:
    branches:
      - main
      - opendistro-*

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go ubuntu-latest
        uses: actions/setup-go@v2
        with:
          go-version: 1.14

      - name: Install goimports
        run:  go get golang.org/x/tools/cmd/goimports

      - name: Check out source code
        uses: actions/checkout@v2

      - name: Format check
        run: goimports -w .

      - name: Check for modified files
        id: git-check
        run: |
          echo ::set-output name=modified::$(if git diff-index --quiet HEAD --; then echo "false"; else echo "true"; fi)

      - name: Display unformated changes and fail if any
        if: steps.git-check.outputs.modified == 'true'
        run: |
          echo "Found some files are dirty. Please add changes to index and ammend commit".
          git diff
          exit 1

      - name: Lint check
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.29

      - name: Run Unit Tests
        env:
          GOPROXY: "https://proxy.golang.org"
        run: |
          go test ./...  -coverprofile=coverage.out
          go tool cover -func=coverage.out

      - name: Run Docker Image
        run: |
          make docker.start.components
          sleep 60

      - name: Run Integration Tests
        env:
          GOPROXY: "https://proxy.golang.org"
        run: make test.integration

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1.0.3
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: coverage.out
          flags: odfe-cli
          name: codecov-umbrella

      - name: Stop and Clean Docker Components
        run: |
          make docker.stop
          make docker.clean

  build:
    strategy:
      matrix:
        platform: [ ubuntu-latest, macos-latest, windows-latest ]
        go-version: [ 1.14 ]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Set up Go ${{ matrix.platform }}
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}

      - name: Check out source code
        uses: actions/checkout@v2

      - name: Build for ${{ matrix.platform }}-${{ matrix.go-version }}
        env:
          GOPROXY: "https://proxy.golang.org"
        run: go build .